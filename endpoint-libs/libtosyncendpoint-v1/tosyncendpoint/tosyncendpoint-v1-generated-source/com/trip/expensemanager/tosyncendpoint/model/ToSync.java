/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-11-17 18:43:33 UTC)
 * on 2014-11-29 at 12:45:57 UTC 
 * Modify at your own risk.
 */

package com.trip.expensemanager.tosyncendpoint.model;

/**
 * Model definition for ToSync.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the tosyncendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ToSync extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long changerId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long syncItem;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long syncItemId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String syncType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long userId;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getChangerId() {
    return changerId;
  }

  /**
   * @param changerId changerId or {@code null} for none
   */
  public ToSync setChangerId(java.lang.Long changerId) {
    this.changerId = changerId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public ToSync setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSyncItem() {
    return syncItem;
  }

  /**
   * @param syncItem syncItem or {@code null} for none
   */
  public ToSync setSyncItem(java.lang.Long syncItem) {
    this.syncItem = syncItem;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSyncItemId() {
    return syncItemId;
  }

  /**
   * @param syncItemId syncItemId or {@code null} for none
   */
  public ToSync setSyncItemId(java.lang.Long syncItemId) {
    this.syncItemId = syncItemId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSyncType() {
    return syncType;
  }

  /**
   * @param syncType syncType or {@code null} for none
   */
  public ToSync setSyncType(java.lang.String syncType) {
    this.syncType = syncType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * @param userId userId or {@code null} for none
   */
  public ToSync setUserId(java.lang.Long userId) {
    this.userId = userId;
    return this;
  }

  @Override
  public ToSync set(String fieldName, Object value) {
    return (ToSync) super.set(fieldName, value);
  }

  @Override
  public ToSync clone() {
    return (ToSync) super.clone();
  }

}
